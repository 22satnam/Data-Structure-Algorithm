package Algorithm.Arrays.LeetcodeProblems.MaximumNumberOfEvent;


class Solution {
public:
    int maxEvents(vector<vector<int>>& events) {
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> end;
        set<int> day;
        int mx=0;
        for(int i=0;i<events.size();i++){
            end.push(make_pair(events[i][1], events[i][0]));
            mx=max(mx, events[i][1]);
        }
        for(int i=1;i<=mx;i++){
            day.insert(i);
        }
        int ans=0;
        while(end.size()!=0){
            auto it=day.lower_bound(end.top().second);
            if(it!=day.end() && *it<=end.top().first){
                ans++;
                day.erase(*it);
            }
            end.pop();
        }
        return ans;
    }
};
